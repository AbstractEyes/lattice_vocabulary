"""Auto-generated type stub for IDE support - DO NOT EDIT MANUALLY"""
# Generated by: python -m geovocab2.tools.generate_stubs

from .formula_base import FormulaBase
from .engineering.atomic import (
    AngleBetweenVectors as AngleBetweenVectors,
    BarycentricInterpolation as BarycentricInterpolation,
    CrossProduct as CrossProduct,
    DistanceMetric as DistanceMetric,
    DotProduct as DotProduct,
    LinearInterpolation as LinearInterpolation,
    Normalize as Normalize,
    OrientedAngle2D as OrientedAngle2D,
    PointToLineDistance as PointToLineDistance,
    PointToPlaneDistance as PointToPlaneDistance,
    SphericalInterpolation as SphericalInterpolation,
    TetrahedronVolume as TetrahedronVolume,
    TriangleArea as TriangleArea,
    VectorNorm as VectorNorm,
    VectorProjection as VectorProjection,
)
from .engineering.fundamental import (
    AngleDifference as AngleDifference,
    Atan2 as Atan2,
    CartesianToPolar as CartesianToPolar,
    CartesianToSpherical as CartesianToSpherical,
    Exponential as Exponential,
    HyperbolicFunctions as HyperbolicFunctions,
    InverseHyperbolic as InverseHyperbolic,
    InverseTrig as InverseTrig,
    Logarithm as Logarithm,
    PolarToCartesian as PolarToCartesian,
    Power as Power,
    SinCos as SinCos,
    SphericalToCartesian as SphericalToCartesian,
    WrapAngle as WrapAngle,
)
from .engineering.geometric import (
    AxisAlignedBoundingBox as AxisAlignedBoundingBox,
    BoundingSphere as BoundingSphere,
    ClosestPointOnSegment as ClosestPointOnSegment,
    ClosestPointOnTriangle as ClosestPointOnTriangle,
    PointInTriangle as PointInTriangle,
    QuaternionToMatrix as QuaternionToMatrix,
    RayAABBIntersection as RayAABBIntersection,
    RayPlaneIntersection as RayPlaneIntersection,
    RaySphereIntersection as RaySphereIntersection,
    RayTriangleIntersection as RayTriangleIntersection,
    RotationMatrix3D as RotationMatrix3D,
    SphereSphereOverlap as SphereSphereOverlap,
)
from .engineering.projection import (
    FromHomogeneous as FromHomogeneous,
    GenerateRays as GenerateRays,
    LookAtMatrix as LookAtMatrix,
    OrthographicMatrix as OrthographicMatrix,
    OrthographicProject as OrthographicProject,
    PerspectiveMatrix as PerspectiveMatrix,
    PerspectiveProject as PerspectiveProject,
    ProjectionPipeline as ProjectionPipeline,
    ScreenToNDC as ScreenToNDC,
    ToHomogeneous as ToHomogeneous,
    ViewportTransform as ViewportTransform,
)
from .engineering.simplex import (
    BarycentricCoordinates as BarycentricCoordinates,
    CMLogDetRegularizer as CMLogDetRegularizer,
    FastSimplexCheck as FastSimplexCheck,
    ParabolaProperties as ParabolaProperties,
    QuadraticSolver as QuadraticSolver,
    RoseWeightedVolume as RoseWeightedVolume,
    SimplexCentroid as SimplexCentroid,
    SimplexDimension as SimplexDimension,
    SimplexEdges as SimplexEdges,
    SimplexFaces as SimplexFaces,
    SimplexFacesSampler as SimplexFacesSampler,
    SimplexQuality as SimplexQuality,
    SimplexQualityExtended as SimplexQualityExtended,
    SimplexToSimplex as SimplexToSimplex,
    SimplexVolume as SimplexVolume,
    SimplexVolumeExtended as SimplexVolumeExtended,
)
from .engineering.wave import (
    Convolution as Convolution,
    FastFourierTransform as FastFourierTransform,
    FrequencyFilter as FrequencyFilter,
    GaussianFilter as GaussianFilter,
    HeatDiffusion as HeatDiffusion,
    InverseFourierTransform as InverseFourierTransform,
    ReactionDiffusion as ReactionDiffusion,
    RealFFT as RealFFT,
    Spectrogram as Spectrogram,
    WavePropagation as WavePropagation,
    WindowFunction as WindowFunction,
)
from .experimental.chaos import (
    NoiseCollector as NoiseCollector,
    SimplexQuality as SimplexQuality,
    SimplexVolume as SimplexVolume,
)
from .experimental.origin_sampler import (
    CMLogDetRegularizer as CMLogDetRegularizer,
    GeometricOriginSampler as GeometricOriginSampler,
    RoseWeightedVolume as RoseWeightedVolume,
    SimplexCentroid as SimplexCentroid,
    SimplexFacesSampler as SimplexFacesSampler,
    SimplexQuality as SimplexQuality,
    SimplexVolume as SimplexVolume,
)
from .simple.add import (
    AddFormula as AddFormula,
)
from .symbolic.cantor import (
    BoxCountingDimension as BoxCountingDimension,
    CantorDiagonalization as CantorDiagonalization,
    CantorDust as CantorDust,
    CantorFunction as CantorFunction,
    CantorSampler as CantorSampler,
    CantorSet as CantorSet,
    CantorSetGeneralized as CantorSetGeneralized,
    CantorStaircaseSchedule as CantorStaircaseSchedule,
    CardinalArithmetic as CardinalArithmetic,
    FractalComplexity as FractalComplexity,
    GeometricSlidingWindow as GeometricSlidingWindow,
    HierarchicalSubdivision as HierarchicalSubdivision,
    HierarchicalVocabIndex as HierarchicalVocabIndex,
    MultiScaleEncoding as MultiScaleEncoding,
    OrdinalArithmetic as OrdinalArithmetic,
    SimplexCapacityController as SimplexCapacityController,
    SimplexLossRegularizer as SimplexLossRegularizer,
    TransfiniteLimit as TransfiniteLimit,
    TransfiniteSubdivision as TransfiniteSubdivision,
    VocabCellPartitioner as VocabCellPartitioner,
)
from .symbolic.cayley_menger import (
    CayleyMengerBatchLoss as CayleyMengerBatchLoss,
    CayleyMengerDeterminantOnly as CayleyMengerDeterminantOnly,
    CayleyMengerExpanded as CayleyMengerExpanded,
    CayleyMengerFromSimplex as CayleyMengerFromSimplex,
    CayleyMengerMatrixBuilder as CayleyMengerMatrixBuilder,
    CayleyMengerVolume as CayleyMengerVolume,
)
from .symbolic.einstein import (
    ChristoffelSymbols as ChristoffelSymbols,
    ConformalMetric as ConformalMetric,
    GeodesicIntegrator as GeodesicIntegrator,
    ParallelTransport as ParallelTransport,
    RiemannCurvature as RiemannCurvature,
    SchwarzschildMetric as SchwarzschildMetric,
    SimplexStressEnergy as SimplexStressEnergy,
)
from .symbolic.euler import (
    EulerAngles as EulerAngles,
    EulerCharacteristic as EulerCharacteristic,
    EulerDiscreteStep as EulerDiscreteStep,
    EulerLagrange as EulerLagrange,
    EulerMomentOfInertia as EulerMomentOfInertia,
    EulerRigidBodyDynamics as EulerRigidBodyDynamics,
    ExponentialMap as ExponentialMap,
    FlowMatchingODE as FlowMatchingODE,
    FlowMatchingVelocity as FlowMatchingVelocity,
    LogarithmMap as LogarithmMap,
    VelocityFieldFromSimplex as VelocityFieldFromSimplex,
)
from .symbolic.hawking import (
    BekensteinHawkingEntropy as BekensteinHawkingEntropy,
    HawkingLuminosity as HawkingLuminosity,
    HawkingTemperature as HawkingTemperature,
    HolographicBound as HolographicBound,
    InformationLoss as InformationLoss,
    KerrParameter as KerrParameter,
    SchwarzschildMetric as SchwarzschildMetric,
    SingularityDetector as SingularityDetector,
    SurfaceGravity as SurfaceGravity,
)
from .symbolic.hooke import (
    BeamBending as BeamBending,
    ElasticEnergy as ElasticEnergy,
    EulerBuckling as EulerBuckling,
    HookesLaw as HookesLaw,
    MaximumShearStress as MaximumShearStress,
    ShearStress as ShearStress,
    SpringForce as SpringForce,
    StrainFromDisplacement as StrainFromDisplacement,
    TorsionalStress as TorsionalStress,
    VonMisesStress as VonMisesStress,
)
from .symbolic.newton import (
    AngularMomentum as AngularMomentum,
    ElasticCollision as ElasticCollision,
    GravitationalPotential as GravitationalPotential,
    InelasticCollision as InelasticCollision,
    KeplerOrbit as KeplerOrbit,
    MechanicalEnergy as MechanicalEnergy,
    MomentumConservation as MomentumConservation,
    ProjectileMotion as ProjectileMotion,
    UniversalGravitation as UniversalGravitation,
    VisVivaEquation as VisVivaEquation,
)
from .symbolic.nikola import (
    BeatFrequency as BeatFrequency,
    DampedOscillator as DampedOscillator,
    DrivenResonance as DrivenResonance,
    EnergyFlow as EnergyFlow,
    HarmonicModes as HarmonicModes,
    MutualCoupling as MutualCoupling,
    PotentialField as PotentialField,
    QualityFactor as QualityFactor,
    ResonantFrequency as ResonantFrequency,
    StandingWavePattern as StandingWavePattern,
)

__all__: list[str]
