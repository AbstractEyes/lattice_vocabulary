"""Auto-generated type stub for IDE support - DO NOT EDIT MANUALLY"""
# Generated by: python -m geovocab2.tools.generate_stubs

from .formula_base import FormulaBase

# engineering
from .engineering.atomic import (
    AngleBetweenVectors,
    BarycentricInterpolation,
    CrossProduct,
    DistanceMetric,
    DotProduct,
    LinearInterpolation,
    Normalize,
    OrientedAngle2D,
    PointToLineDistance,
    PointToPlaneDistance,
    SphericalInterpolation,
    TetrahedronVolume,
    TriangleArea,
    VectorNorm,
    VectorProjection,
)
from .engineering.fundamental import (
    AngleDifference,
    Atan2,
    CartesianToPolar,
    CartesianToSpherical,
    Exponential,
    HyperbolicFunctions,
    InverseHyperbolic,
    InverseTrig,
    Logarithm,
    PolarToCartesian,
    Power,
    SinCos,
    SphericalToCartesian,
    WrapAngle,
)
from .engineering.geometric import (
    AxisAlignedBoundingBox,
    BoundingSphere,
    ClosestPointOnSegment,
    ClosestPointOnTriangle,
    PointInTriangle,
    QuaternionToMatrix,
    RayAABBIntersection,
    RayPlaneIntersection,
    RaySphereIntersection,
    RayTriangleIntersection,
    RotationMatrix3D,
    SphereSphereOverlap,
)
from .engineering.projection import (
    FromHomogeneous,
    GenerateRays,
    LookAtMatrix,
    OrthographicMatrix,
    OrthographicProject,
    PerspectiveMatrix,
    PerspectiveProject,
    ProjectionPipeline,
    ScreenToNDC,
    ToHomogeneous,
    ViewportTransform,
)
from .engineering.simplex import (
    BarycentricCoordinates,
    CMLogDetRegularizer,
    ParabolaProperties,
    QuadraticSolver,
    RoseWeightedVolume,
    SimplexCentroid,
    SimplexDimension,
    SimplexEdges,
    SimplexFaces,
    SimplexFacesSampler,
    SimplexQuality,
    SimplexQualityExtended,
    SimplexToSimplex,
    SimplexVolume,
    SimplexVolumeExtended,
)
from .engineering.wave import (
    Convolution,
    FastFourierTransform,
    FrequencyFilter,
    GaussianFilter,
    HeatDiffusion,
    InverseFourierTransform,
    ReactionDiffusion,
    RealFFT,
    Spectrogram,
    WavePropagation,
    WindowFunction,
)

# experimental

# objective

# simple
from .simple.add import (
    AddFormula,
)

# symbolic
from .symbolic.cantor import (
    BoxCountingDimension,
    CantorDiagonalization,
    CantorDust,
    CantorFunction,
    CantorSampler,
    CantorSet,
    CantorSetGeneralized,
    CantorStaircaseSchedule,
    CardinalArithmetic,
    FractalComplexity,
    GeometricSlidingWindow,
    HierarchicalSubdivision,
    HierarchicalVocabIndex,
    MultiScaleEncoding,
    OrdinalArithmetic,
    SimplexCapacityController,
    SimplexLossRegularizer,
    TransfiniteLimit,
    TransfiniteSubdivision,
    VocabCellPartitioner,
)
from .symbolic.cayley_menger import (
    CayleyMengerBatchLoss,
    CayleyMengerDeterminantOnly,
    CayleyMengerExpanded,
    CayleyMengerFromSimplex,
    CayleyMengerMatrixBuilder,
    CayleyMengerVolume,
)
from .symbolic.einstein import (
    ChristoffelSymbols,
    ConformalMetric,
    GeodesicIntegrator,
    ParallelTransport,
    RiemannCurvature,
    SchwarzschildMetric,
    SimplexStressEnergy,
)
from .symbolic.euler import (
    EulerAngles,
    EulerCharacteristic,
    EulerDiscreteStep,
    EulerLagrange,
    EulerMomentOfInertia,
    EulerRigidBodyDynamics,
    ExponentialMap,
    FlowMatchingODE,
    FlowMatchingVelocity,
    LogarithmMap,
    VelocityFieldFromSimplex,
)
from .symbolic.hawking import (
    BekensteinHawkingEntropy,
    HawkingLuminosity,
    HawkingTemperature,
    HolographicBound,
    InformationLoss,
    KerrParameter,
    SchwarzschildMetric,
    SingularityDetector,
    SurfaceGravity,
)
from .symbolic.hooke import (
    BeamBending,
    ElasticEnergy,
    EulerBuckling,
    HookesLaw,
    MaximumShearStress,
    ShearStress,
    SpringForce,
    StrainFromDisplacement,
    TorsionalStress,
    VonMisesStress,
)
from .symbolic.newton import (
    AngularMomentum,
    ElasticCollision,
    GravitationalPotential,
    InelasticCollision,
    KeplerOrbit,
    MechanicalEnergy,
    MomentumConservation,
    ProjectileMotion,
    UniversalGravitation,
    VisVivaEquation,
)
from .symbolic.nikola import (
    BeatFrequency,
    DampedOscillator,
    DrivenResonance,
    EnergyFlow,
    HarmonicModes,
    MutualCoupling,
    PotentialField,
    QualityFactor,
    ResonantFrequency,
    StandingWavePattern,
)

__all__: list[str]
